# =============================================================================
# Marzban Node Agent Configuration
# =============================================================================

# Node identification (REQUIRED)
NODE_ID=node-001
NODE_NAME=Germany-Frankfurt-01

# Central Redis server connection (REQUIRED)
CENTRAL_REDIS_URL=redis://main-server:6379/0
CENTRAL_REDIS_URL=redis://:mypassword@server:6379/0

# Path to Marzban access log file (REQUIRED)
ACCESS_LOG_PATH=/var/lib/marzban/access.log

# Batching and performance settings
BATCH_SIZE=50                # Number of logs to batch before sending
FLUSH_INTERVAL=3.0          # Force flush interval in seconds

# Retry and reliability settings  
MAX_RETRIES=5               # Maximum retry attempts for Redis operations
RETRY_DELAY=2.0             # Base delay between retries in seconds

# Logging configuration
LOG_LEVEL=INFO              # Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL

# =============================================================================
# Configuration Notes:
# =============================================================================
#
# NODE_ID: Must be unique across all nodes in your network
# NODE_NAME: Human-readable identifier for easier monitoring
# CENTRAL_REDIS_URL: Connection string to your central Redis server
#   - Format: redis://[password@]host:port/database
#   - Examples:
#     - redis://localhost:6379/0
#     - redis://password@redis.example.com:6379/0
#     - rediss://user:password@secure-redis.com:6380/0 (SSL)
#
# ACCESS_LOG_PATH: Full path to Marzban's access.log file
#   - Default Marzban location: /var/lib/marzban-node/access.log
#   - Must be readable by the agent container/process
#
# BATCH_SIZE: Higher values reduce Redis calls but increase memory usage
#   - Recommended: 50-100 for normal loads, 10-25 for low-resource systems
#
# FLUSH_INTERVAL: Maximum time to wait before sending partial batches
#   - Lower values provide more real-time data but increase Redis load
#   - Higher values improve efficiency but delay log forwarding
#
# MAX_RETRIES: How many times to retry failed Redis operations
#   - Set to 0 to disable retries (not recommended)
#   - Higher values improve reliability but may delay error detection
#
# RETRY_DELAY: Base delay for exponential backoff retry strategy
#   - Actual delays: 2.0s, 4.0s, 8.0s, 16.0s, 32.0s for 5 retries
#
# LOG_LEVEL: Controls verbosity of agent logging
#   - DEBUG: Very verbose, useful for troubleshooting
#   - INFO: Normal operational logging (recommended)
#   - WARNING: Only warnings and errors
#   - ERROR: Only errors and critical issues
#   - CRITICAL: Only critical failures
#
# =============================================================================
